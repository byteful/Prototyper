plugins {
    id 'java'
    id 'com.gradleup.shadow' version '8.3.5'
}

group = 'me.byteful.plugin'
version = '1.0.0'

repositories {
    mavenCentral()
    maven {
        name = "spigotmc-repo"
        url = "https://hub.spigotmc.org/nexus/content/repositories/snapshots/"
    }
    maven {
        name = "sonatype"
        url = "https://oss.sonatype.org/content/groups/public/"
    }
    maven {
        name = "papermc"
        url = "https://repo.papermc.io/repository/maven-public/"
    }
}

dependencies {
    // PaperSpigot API
    compileOnly "io.papermc.paper:paper-api:1.21.4-R0.1-SNAPSHOT"

    // JavaScript engine
    implementation 'org.graalvm.js:js:24.1.0'
    implementation 'org.graalvm.polyglot:polyglot:24.1.0'

    // Command library
    implementation 'io.github.revxrsal:lamp.common:4.0.0-beta.19'
    implementation 'io.github.revxrsal:lamp.bukkit:4.0.0-beta.19'
}

def targetJavaVersion = 21
java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
}

tasks.withType(JavaCompile).configureEach {
    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        options.release = targetJavaVersion
    }
}

processResources {
    def props = [version: version]
    inputs.properties props
    filteringCharset 'UTF-8'
    filesMatching('plugin.yml') {
        expand props
    }
}

shadowJar {
    archiveBaseName.set("Prototyper")
    archiveClassifier.set("")

    mergeServiceFiles()

    relocate 'revxrsal.commands', 'me.byteful.plugin.prototyper.libs.lamp'
}

build.dependsOn += shadowJar